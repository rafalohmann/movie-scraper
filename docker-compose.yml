services:
  # client:
  #   build:
  #     context: ./client
  #   container_name: movie-scraper-client
  #   ports:
  #     - "${CLIENT_PORT:-8080}:80"
  #   environment:
  #     - PORT=${CLIENT_PORT:-80}
  #   depends_on:
  #     - api

  # api:
  #   build:
  #     context: ./api
  #   container_name: movie-scraper-api
  #   ports:
  #     - "${API_PORT:-3000}:3000"
  #   environment:
  #     - PORT=${API_PORT:-3000}
  #     - MONGO_URI=mongodb://mongo:27017/moviesdb
  #     - OMDB_API_KEY=${OMDB_API_KEY}
  #     - MONGODB_ADMINUSERNAME=${MONGODB_ADMINUSERNAME}
  #     - MONGODB_ADMINPASSWORD=${MONGODB_ADMINPASSWORD}
  #   depends_on:
  #     - mongo

  mongo:
    image: mongo:6.0
    container_name: movie-scraper-mongodb
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMINUSERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMINPASSWORD}
    volumes:
      - mongo-data:/data/db

  mongo-admin:
    build:
      context: ./mongodb-admin
    container_name: movie-scraper-mongo-admin
    ports:
      - "${MONGO_ADMIN_PORT:-8081}:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ADMINPASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGODB_ADMINUSERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGODB_ADMINPASSWORD}
      - PORT=${MONGO_ADMIN_PORT:-8081}
    depends_on:
      - mongo

  nginx:
    image: nginx:stable
    container_name: movie-scraper-nginx_proxy
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.template.conf:/etc/nginx/nginx.template.conf:ro
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - API_PORT=${API_PORT}
    entrypoint: /bin/sh -c "envsubst '$$CLIENT_PORT $$API_PORT' < /etc/nginx/nginx.template.conf > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    # depends_on:
    #   - client
    #   - api

volumes:
  mongo-data:
